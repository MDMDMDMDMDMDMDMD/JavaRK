# Database Configuration
spring.datasource.url=jdbc:postgresql://postgres:5432/tododb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Initialize database with data.sql
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
spring.sql.init.continue-on-error=true

# Server Configuration
server.port=8080

# Auth Service Configuration
auth.service.url=${AUTH_SERVICE_URL:http://auth-service:8081}

# Logging Configuration
logging.level.com.example.todoj.security=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG

# JWT Configuration
jwt.secret=${JWT_SECRET:bezKoderSecretKeyBezKoderSecretKeyBezKoderSecretKeyBezKoderSecretKeyBezKoderSecretKey}
jwt.expiration=86400000
# Make sure this matches exactly with auth-service's jwt secret
auth.jwt.secret=bezKoderSecretKeyBezKoderSecretKeyBezKoderSecretKeyBezKoderSecretKeyBezKoderSecretKey
auth.jwt.expirationMs=86400000

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.health.db.enabled=true
management.health.diskspace.enabled=true

# We've fixed the circular dependency by restructuring the beans
# spring.main.allow-circular-references=true